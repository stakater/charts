---
{{- if and ( .Values.prometheus.rules.rabbitmq.rabbitmqMemoryBelowThreshold ) ( .Values.prometheus.rules.rabbitmq.rabbitmqMemoryBelowThreshold.enabled ) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-memory-below-threshold
{{- if .Values.prometheus.rules.rabbitmq.rabbitmqMemoryBelowThreshold.namespace  }}
  namespace: {{ .Values.prometheus.rules.rabbitmq.rabbitmqMemoryBelowThreshold.namespace }}
{{- else }}
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
{{- end }}
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
{{- if .Values.prometheus.rules.labels }}
{{- toYaml .Values.prometheus.rules.labels | nindent 4 }}
{{- end }}
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitmqMemoryBelowThreshold
      expr: (rabbitmq_resident_memory_limit_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster="{{ .Values.prometheus.rules.rabbitmq.rabbitmqNodesBelowThreshold.rabbitmqCluster }}"}) - (rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster="{{ .Values.prometheus.rules.rabbitmq.rabbitmqNodesBelowThreshold.rabbitmqCluster }}" }) < {{ .Values.prometheus.rules.rabbitmq.rabbitmqMemoryBelowThreshold.threshold }}
      for: 1m
      annotations:
        description: RabbitMQ {{`{{ $labels.instance }}`}} Memory threshold has been reached. Current value=`{{`{{ $value | printf "%.0f" }}`}}`, Threshold= {{ .Values.prometheus.rules.rabbitmq.rabbitmqMemoryBelowThreshold.threshold }}
        summary: RabbitMQ is Out of Memory
      labels:
        rabbitmq_cluster: '{{`{{ $labels.label_app_kubernetes_io_name }}`}}'
        rulesgroup: rabbitmq
        severity: critical
{{- end }}
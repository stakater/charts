{{- if and ( .Values.prometheus.rules.signportDeploymentGenerationMismatch ) ( .Values.prometheus.rules.signportDeploymentGenerationMismatch.enabled ) }}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: signport-deployment-generation-mismatch
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
{{- if .Values.prometheus.rules.labels }}
{{- toYaml .Values.prometheus.rules.labels | nindent 4 }}
{{- end }}
spec:
  groups:
  - name: signport
    rules:
    - alert: SignportDeploymentGenerationMismatch
      expr: |
        kube_deployment_status_observed_generation{namespace=~"{{ .Values.global.namespace | default .Release.Namespace }}", deployment=~"frontend.*"}
          !=
        kube_deployment_metadata_generation{namespace=~"{{ .Values.global.namespace | default .Release.Namespace }}", deployment=~"frontend.*"}
      for: 10m
      annotations:
        message: Deployment generation for {{`{{ $labels.namespace }}`}}/{{`{{ $labels.pod }}`}} does not match, this indicates that the Deployment has failed but has not been rolled back.
      labels:
        severity: warning
{{- end }}

####################################
# Review Web User Interface
####################################
nordmartReviewUi:
  applicationName: "nordmart-review-ui"
  
  ## Deployment
  deployment:
    additionalLabels:
      appCategory: frontend
    image:
      repository: docker.io/stakater/stakater-nordmart-review-ui
      tag: 1.0.22
    env:
      PORT:
        value: "4200"
      REVIEW_API:
        value: "https://nordmart-review-api-{{ .Release.Namespace }}.apps.devtest.vxdqgl7u.kubeapp.cloud"
    probes:
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
        initialDelaySeconds: 10
        httpGet:
          path: /health
          port: 4200
      livenessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
        initialDelaySeconds: 10
        httpGet:
          path: /health
          port: 4200

  ## Service
  service:
    ports:
    - port: 8080
      name: http
      protocol: TCP
      targetPort: 4200

  ## RBAC
  rbac:
    serviceAccount:
      enabled: true

  ## Route
  route:
    enabled: true

  ## Forecastl App
  forecastle:
    enabled: true
    displayName: "Nordmart Review UI"
    group: "Nordmart"

####################################
# Review REST API
####################################
nordmartReviewApi:
  applicationName: "nordmart-review-api"
  
  ## Deployment
  deployment:
    additionalLabels:
      appCategory: backend
    envFrom:
      review-config:
        type: configmap
        nameSuffix: config
    image:
      repository: docker.io/stakater/stakater-nordmart-review
      tag: 1.0.35
    resources:
      limits:
        memory: 1Gi
        cpu: 0.6
      requests:
        memory: 128Mi
        cpu: 0.1
    probes:
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
        initialDelaySeconds: 10
        httpGet:
          path: /actuator/health
          port: 8080
      livenessProbe:
        failureThreshold: 3
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
        initialDelaySeconds: 10
        httpGet:
          path: /actuator/health
          port: 8080

  ## Prometheus Rule to trigger alerts based on ratings
  prometheusRule:
    enabled: true
    additionalLabels:
      prometheus: stakater-workload-monitoring
    groups:
      - name: nordmart-review-low-rating-warning
        rules:
          - alert: NordmartReviewLowRatingsCritical
            annotations:
              message: >-
                Total ratings below 2 has crossed the threshold 8. Total reviews: {{ $value }}.
            expr: >
              sum by (namespace) (nordmart_review_ratings_total{rating="2"} or nordmart_review_ratings_total{rating="1"}) > 8
            labels:
              severity: critical

  ## ConfigMap
  configMap:
    enabled: true
    files:
      config:
        DB_NAME: "nordmartDB"
        MONGO_HOST: "review-mongodb"

  ## RBAC
  rbac:
    serviceAccount:
      enabled: true

  ## Service
  service:
    ports:
    - name: http
      port: 8080
      targetPort: 8080

  ## Route
  route:
    enabled: true
    port:
      targetPort: http

  ## Service Monitor
  serviceMonitor:
    enabled: true

####################################
# Review MongoDB
####################################
mongodb:
  fullnameOverride: review-mongodb
  resources: 
    limits:
      memory: 1Gi 
      cpu: 0.5
    requests:
      memory: 128Mi
      cpu: 0.1
      
  auth:
    enabled: false

  podSecurityContext:
    enabled: false

  containerSecurityContext:
    enabled: false
